{"version":3,"sources":["components/Header.js","helpers/calcular.js","components/Form.js","components/Grafic.js","App.js","index.js"],"names":["Header","useState","showMessage","setShowMessage","className","type","onChange","console","log","validateData","data","Object","keys","forEach","dato","trim","initialInvest","contribution","period","interest","convertPeriodTime","Form","setChartData","periodTime","interestTime","formValue","setFormValue","handleChange","e","target","name","value","onSubmit","preventDefault","onlyInvest","ivestmentOverTime","Number","realPeriod","Math","round","realInterest","i","suma","x","push","calcular","placeholder","Grafic","chartData","invest","grafic","labels","datasets","label","backgroundColor","borderWidth","options","responsive","Intl","NumberFormat","format","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28c3f0bf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './styles/header.scss';\r\n\r\nexport const Header = () => {\r\n    const [showMessage,setShowMessage] = useState(false);\r\n    return (\r\n        <header className=\"purple darken-1 nav-wrapper z-depth-4 row valign-wrapper\">\r\n            <div className=\"col md2\"></div>\r\n            <h1 className=\"brand-logo white-text center-align col s8\"> Interest Calculator </h1>\r\n            <div className=\"switch col m2\">\r\n                <label>\r\n                    <input type=\"checkbox\" \r\n                        onChange={ () => { setShowMessage(!showMessage)}}\r\n                    />\r\n                    <span className=\"lever\"></span>\r\n                </label>\r\n                \r\n            </div>\r\n            {showMessage ? <div className= \"message z-depth-2\"><span>Fuck You! .l.</span> </div> : console.log( showMessage )}\r\n        </header>\r\n    )\r\n}\r\n","\r\nexport const calcular = ( data={}) =>{\r\n\r\n    if( !validateData(data) ){\r\n        return [];\r\n    }\r\n    const {\r\n    initialInvest,\r\n    contribution,\r\n    period,\r\n    periodTime,\r\n    interest,\r\n    interestTime} = data;\r\n    // array declaratin\r\n    const onlyInvest = [ initialInvest ];\r\n    const ivestmentOverTime = [ Number(initialInvest) ];\r\n    // casting periods\r\n    const realPeriod = Math.round(convertPeriodTime(periodTime)*Number(period));\r\n    const realInterest = ( Number(interest)/convertPeriodTime(interestTime));\r\n\r\n    // calculation the interest\r\n    for(let i = 1; i<= realPeriod ; i++){\r\n        const suma = Number(contribution) + ivestmentOverTime[i-1];\r\n        const x =  suma + (suma/100)*realInterest;\r\n        ivestmentOverTime.push( Math.round(x) );\r\n        onlyInvest.push( suma );\r\n    }\r\n    return [ivestmentOverTime,onlyInvest];\r\n}\r\n\r\nconst validateData = (data) =>{\r\n    (Object.keys(data)).forEach( dato => {\r\n        if(dato.trim() === ''){\r\n            return false;\r\n        }\r\n    });\r\n    if( data.initialInvest <= 0 || data.contribution <0 || data.period <=0 || data.interest <= 0 ){\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst convertPeriodTime = ( period ) =>{\r\n    switch( period ){\r\n        case 'w':\r\n            return 1/4.334;\r\n        case 'y':\r\n            return 12;\r\n        default:\r\n            return 1;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * {\r\n    initialInvest:\"\",\r\n    contribution :\"\",\r\n    ContributionTime:\"w\",\r\n    period:\"\",\r\n    periodTime:\"w\",\r\n    interest:\"\",\r\n    interestTime:\"w\"\r\n}\r\n */","import React, { useState } from 'react'\r\nimport { calcular } from '../helpers/calcular';\r\nimport './styles/form.scss'\r\n// import M from 'materialize-css/sass/components/form';\r\n\r\nexport const Form = ({setChartData}) => {\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        initialInvest:\"\",\r\n        contribution :\"\",\r\n        period:\"\",\r\n        periodTime:\"w\",\r\n        interest:\"\",\r\n        interestTime:\"w\"\r\n    });\r\n\r\n    const handleChange = e =>{\r\n        setFormValue({\r\n            ...formValue,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        setChartData(calcular(formValue));\r\n    }\r\n    return (\r\n        <>\r\n            <form \r\n                className=\"col s12 m6\"\r\n                onSubmit={ handleSubmit }\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">                 \r\n                    <input type=\"number\" placeholder=\"1000\"\r\n                        name=\"initialInvest\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                        <label><i className=\"material-icons left\">today</i>Initial invest</label>\r\n                    </div>\r\n                    <div className=\"input-field col s6\">                 \r\n                    <input type=\"number\" placeholder=\"1000\"\r\n                        name=\"contribution\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                        <label><i className=\"material-icons left\">attach_money</i>Deposits</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                            <input type=\"number\" placeholder=\"52\"\r\n                                name=\"period\"\r\n                                onChange={ handleChange }\r\n                            />\r\n                            <label><i className=\"material-icons left\">access_alarm</i>Period</label>\r\n                    </div>\r\n                    <div className=\"input-field col s6\">\r\n                            <select\r\n                                name=\"periodTime\"\r\n                                onChange={ handleChange }\r\n                            >\r\n                                <option value=\"w\">Weeks</option>\r\n                                <option value=\"m\">Months</option>\r\n                                <option value=\"y\">Years</option>\r\n                            </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                            <input type=\"number\" placeholder=\"10\"\r\n                                name=\"interest\"\r\n                                onChange={ handleChange }\r\n                            />\r\n                            <label><i className=\"material-icons left\">timelapse</i>Interest</label>\r\n                    </div>\r\n                    <div className=\"input-field col s6\">\r\n                            <select\r\n                                name=\"interestTime\"\r\n                                onChange={ handleChange }\r\n                            >\r\n                                <option value=\"w\">Week</option>\r\n                                <option value=\"m\">Month</option>\r\n                                <option value=\"y\">Year</option>\r\n                            </select>\r\n                            <label>Calculate every</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s6\">\r\n                        <button \r\n                            className=\"waves-effect waves-light btn pink pulse\"\r\n                            type=\"submit\"\r\n                        >\r\n                        {/* <i className=\"material-icons right \">exposure</i> */}\r\n                        calcular</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Line } from 'react-chartjs-2';\r\nimport './styles/grafic.scss';\r\n\r\nexport const Grafic = ({chartData}) => {\r\n\r\n    const [interest,invest] = chartData;\r\n\r\n    const grafic =({\r\n            labels: Object.keys(interest),\r\n            datasets:[\r\n            {\r\n                label : 'only invest',\r\n                data: invest, \r\n                backgroundColor: [\r\n                    'rgba(75,192,192,0.6)'\r\n                ],\r\n                borderWidth: 4,\r\n            },\r\n            {\r\n                label : 'invest + interest',\r\n                data: interest, \r\n                backgroundColor: [\r\n                    'rgba(192,50,192,0.6)'\r\n                ],\r\n                borderWidth: 4,\r\n            }\r\n        ]\r\n    });\r\n    \r\n    return (\r\n        <div className=\"col s12 m6 chart\">\r\n            <Line \r\n                data={grafic}\r\n                options={{responsive: true}}\r\n                \r\n            />\r\n            <div className=\"z-depth-4 results\">\r\n                <p className=\"flow-text\"> Invest with interest: \r\n                    <span>{new Intl.NumberFormat().format(interest[interest.length-1])}</span> \r\n                </p>\r\n                <p className=\"flow-text\">\r\n                    Total invest: <span>{new Intl.NumberFormat().format(invest[invest.length-1])}</span>\r\n                </p>\r\n                <p className=\"flow-text\">\r\n                    Only interest: <span>{new Intl.NumberFormat().format(interest[interest.length-1] -invest[invest.length-1])}</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport { Header } from './components/Header';\nimport { Form } from './components/Form';\nimport { Grafic } from './components/Grafic';\n\n\nfunction App() {\n\n  const [chartData,setChartData] = useState([]);\n\n  return (\n    <>\n      <Header />\n\n      <main className=\"container\">\n        {/* <button className=\"waves-effect waves-light btn light-green accent-3 pulse\">G</button> */}\n        <div className=\"row\">\n          <Form\n            setChartData={setChartData}\n          />\n          {\n            (!chartData[0]) \n              ? <p className=\"z-depth-2 col s2\" >Llena todos los campos</p>\n              : <Grafic chartData={chartData} />\n          }\n          \n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}